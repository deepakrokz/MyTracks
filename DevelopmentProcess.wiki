#summary How to make changes to My Tracks source and have them merged back.
#labels Featured,Phase-Implementation

= Overview =

This document is for programmers who want to contribute changes to My Tracks. For My Tracks Android development, we use Eclipse for IDE, use Mercurial for source control. We also recommend !TortoiseHg, a graphical tool for Mercurial.

Currently we are using:
  * Eclipse version 3.8
  * Mercurial version 2.2.2
  * !TortoiseHg version 2.4 (Optional)

= One Time Setup =

We recommend creating several Mercurial clones, one for each change to be submitted. For each clone, we recommend creating its own local repository and its own eclipse workspace.

1. Creating Mercurial clones
  * At http://code.google.com/p/mytracks/source/checkout
  * At the bottom, click “Create a clone”.
E.g., my user name is "jshih" and I created several clones as follows
  * jshih-mytracks1 (https://code.google.com/r/jshih-mytracks1/)
  * jshih-mytracks2 (https://code.google.com/r/jshih-mytracks2/)
  * jshih-mytracks3 (https://code.google.com/r/jshih-mytracks3/)
For each clone, allow non-members to review code.
  * In http://code.google.com/r/jshih-mytracks1/adminSource
  * Under “Code reviews’, check “Enable code review” and check “Allow non-members to review code”.

2. Mercurial setup
{{{
hg version
}}}
The command should work. If not, install Mercurial, http://mercurial.selenic.com/. If not familar with Mercurial, see http://hgbook.red-bean.com/read/.

For Mercurial, we recommend including your code.google.com username and password in .hgrc, so you don’t need to type them with each hg command. We also recommend including your username in .hgrc. E.g, in .hgrc, add the following:
{{{
[ui]
username = Name <email>
[auth]
g.prefix = *
g.username = XXX
g.password = XXX
}}}

3. Create corresponding local repository
  * hg clone https://code.google.com/r/jshih-mytracks1 jshih-mytracks1
  * hg clone https://code.google.com/r/jshih-mytracks2/ jshih-mytracks2
  * hg clone https://code.google.com/r/jshih-mytracks3/ jshih-mytracks3

4. Setup Android development with Eclipse
  * See http://developer.android.com/sdk/index.html

5. Make sure Java compiler is 1.6
  * Windows -> Preferences -> Java -> Compiler -> 1.6

6. Make sure Android SDK is up-to-date
  * Windows -> Android SDK Manager 
  * Make sure the latest API level, the latest Tools, the latest Extras are installed. For Extras, definitely need “Google Play services” and “Google Maps Android API2”.

Note that currently My Tracks supports API level 8+ and is targeting API level 17.

7. Create one eclipse workspace per local repository
  * mkdir workspace-jshih-mytracks1
  * mkdir workspace-jshih-mytracks2
  * mkdir workspace-jshih-mytracks3

== One time setup for each local repository/workspace ==

1. File -> Switch Workspace.
  * E.g, workspace-jshih-mytracks1.
2. For each workspace, import four My Tracks projects.
  * File->Import ->General->Existing Projects into Workspace
  * Go to the local repository, jshih-mytracks1, and import
    * !MyTracks
    * !MyTracksLib
    * !MyTracksTest
    * google-play-services_lib
3. For each workspace, add the following two variables.
  * Windows -> Preferences -> Java -> Build Path -> Classpath Variable
    * ANDROID_SDK - make this variable point to the Android SDK's root directory (the one inside which contains directories like platforms, platform-tools)
    * MYTRACKS_BIN - make this variable point to the !MyTracks/bin directory in your local repository

4. Optional. Update the map view v2 key to see the map tiles.
  * See https://developers.google.com/maps/documentation/android/ for getting your key
  * In !AndroidManifest.xml, update the value for "com.google.android.maps.v2.API_KEY"
  * Remember, don’t include your key if you are committing the changes back to main.

= Daily Development =

1. Sync the latest from main
  * cd jshih-mytracks1 (change to your local repository)
  * hg incoming http://code.google.com/p/mytracks
  * hg pull -u http://code.google.com/p/mytracks
  * hg merge (if necessary)
  * hg commit -m “merge heads” (if necessary)
  * Refresh all four My Tracks eclipse projects in workspace-jshih-mytracks1

2. Make changes in eclipse

3. Commit changes
  * hg status
  * hg add (add the necessary new files)
  * hg remove (remove files)
  * if renaming files, use hg rename so that we can keep the file history
  * thg vdiff (use tortoiseHG visual diff, tkdiff) to review all your changes
  * hg commit (Include a complete description of your change)
  * hg outgoing
  * hg push

4. Merge changes back to main, http://code.google.com/p/mytracks
  * File a review ticket
    * In http://code.google.com/p/mytracks/issues/list
    * “New issue” -> Template: Review request

= Comment =
Email mytracks-dev@googlegroups.com