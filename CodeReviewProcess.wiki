#summary One-How to successfully submit code to My Tracks
#labels Deprecated

= My Tracks Code Review Process =

The My Tracks team tries to maintain a high quality code base.  It is with this goal that we will only accept code changes that meet the standard of the application.  We will critique both the content and the style of the code written.

== The Source ==
=== Files to submit ===
When changing My Tracks only submit changes for the files which govern the part of My Tracks you are changing.  Many first time submitters will submit accidental changes to core files such as .project or AndroidManifest.xml.  We cannot afford to change those files on accident.  Carefully review your revisions to ensure they only contain files you feel need to be changed.

=== Code Quality ===
There are almost a million people who use My Tracks regularly. Keeping My Tracks running is more important than any feature you might want to add.
To keep the code base efficient and reduce the possibilities of bugs we will push all submission to:
  #  Not contain duplicated or near duplicate code.
  #  Make reasonable effort to test all code paths.

=== Code Style ===
Many people contribute code to My Tracks.  The only way to keep the code consistent is to have a very strict style guide.  We roughly follow the Sun Java Style guide.  Please review it here:
http://www.oracle.com/technetwork/java/codeconv-138413.html

=== Comments ===
Write a lot of them in your code, but don't leave commented out code. We will critique your language so please write complete sentences.

== The Process ==
Before you submit a request for a code review carefully review this page and make sure your code meets these standards.
  # Once the code meets the standards above notify the team that you have code to submit.  If there is already an open issue for your feature please just update that issue with a link to the clone and set the status to UnderReview.  If there is no issue please open a new issue of type ReviewRequest.
  # After this a team member will review your submission and likely provide feedback on the change. If they are not satisfied with the change they will write detailed comments on each line which should be changed.
  # Please address each comment from step 2 and submit a response for every comment on step 2.  If you simply made the change requested enter "Done."
  # Commit and push your changes to your clone.
  # Submit your replies generated in step 3.
  # Go to step 2.
  # After some number of iterations the code will be accepted by the team.  At that point we will push your change to the repository.